# Create a STW - DBpedia mapping from Wikidata
#
PREFIX dbo: <http://dbpedia.org/ontology/>
PREFIX dbr: <http://dbpedia.org/resource/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX schema: <http://schema.org/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wikibase: <http://wikiba.se/ontology#>
#
select ?stw ?skosRelation ?dbpedia ?item
where {
  # get STW - Wikidata mapping, extend with mapping relation
  service <https://query.wikidata.org/sparql> {
    select ?stw ?item ?skosRelation ?stub
    where {
      ?item p:P3911 ?statement .
      ?statement ps:P3911 ?stwId .
      filter(isLiteral(?stwId))
      # mapping relation
      optional {
        ?statement pq:P4390 ?relation .
        # URI of the equivalent skos property
        ?relation wdt:P2888 ?skosRelation .
      }
      bind(uri(concat('http://zbw.eu/stw/descriptor/', ?stwId)) as ?stw)
      ?page schema:about ?item ;
            schema:isPartOf <https://en.wikipedia.org/> .
      # returned page is url-encoded, dbpedia uses decode url
      bind(strafter(wikibase:decodeUri(str(?page)), 'https://en.wikipedia.org/wiki/') as ?stub)
    }
  }
  # compute dbpedia URI
  bind(uri(concat(str(dbr:), ?stub)) as ?dbpedia)
}

