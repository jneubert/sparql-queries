# Get the industry by mapping to SK classification
#
PREFIX dc: <http://purl.org/dc/elements/1.1/>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX esco: <http://data.europa.eu/esco/model#>
PREFIX hint: <http://www.bigdata.com/queryHints#>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX schema: <http://schema.org/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX zbwext: <http://zbw.eu/namespaces/zbw-extensions/>
#
select distinct ?pm20Id ?pm20 ?pm20Label ?qid ?industryQid
where {
  hint:Query hint:optimizer "None" .
  #
  # all companies with industries from PM20
  service <https://zbw.eu/beta/sparql/pm20/query> {
    ?pm20 a zbwext:CompanyFolder ;
          skos:prefLabel ?pm20Label ;
          dct:identifier ?pm20Id ;
          schema:industry ?industryLabel .
    filter(lang(?industryLabel) = 'en')

    # The Wikidata endpoint does not allow graph statements,
    # therefore the sk vocab and mapping triples have to be loaded into
    # the default graph
##    graph <http://zbw.eu/beta/sk/ng> {
      ?industry skos:prefLabel ?industryLabel ;
                skos:exactMatch ?industryItem .
##    }
  }
  # "main" items - exclude items linked with mapping relations
  ?statement ps:P4293 ?pm20Id .
  ?wd p:P4293 ?statement .
  filter (not exists {
      ?statement pq:P4390 [] .
    })
  bind(strafter(str(?wd), str(wd:)) as ?qid)
  #
  # exclude items already linked with the according industry
  filter(not exists {
      ?wd wdt:P452 ?industryItem .
    })
  #
  bind(strafter(str(?industryItem), str(wd:)) as ?industryQid)
#  filter(bound(?industryQid))
}
order by ?pm20Id ?industryQid

